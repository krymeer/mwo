swagger: "2.0"
info:
  version: "0.1"
  title: "mwo-todo"
schemes:
- "https"
paths:
  /todo:
    post:
      description: Create a new note
      security:
        - mwoUserPool: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: note
        description: A note to be saved
        schema:
          $ref: '#/definitions/noteNew'
      responses:
        "200":
          description: created
          schema:
            $ref: '#/definitions/note'
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:874845083551:function:TodoPostHandler/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws_proxy"
    get:
      description: All notes of the user performing the request
      security:
        - mwoUserPool: []
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/note'
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:874845083551:function:TodoGetHandler/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"

    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json:
            statusCode: 200
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
  /todo/{id}:
    parameters:
    - name: id
      in: path
      description: description
      type: integer
      required: true
    get:
      security:
      - mwoUserPool: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/note'
        '404':
          description: Not found
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:874845083551:function:TodoGetHandler/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    put:
      security:
      - mwoUserPool: []
      parameters:
      - name: note
        in: body
        schema:
          $ref: '#/definitions/note'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/note'
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:874845083551:function:TodoGetHandler/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    delete:
      security:
      - mwoUserPool: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/note'
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:874845083551:function:TodoGetHandler/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      summary: CORS support
      description:
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json:
            "statusCode" : 200
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
definitions:
  "noteNew":
    description: Data required for creating a new note
    type: object
    properties:
      UserID:
        type: string
      Content:
        type: string
  "note":
    description: The entire note object
    type: object
    properties:
      ID:
        type: string
      UserID:
        type: string
      Content:
        type: string
      CreatedAt:
        type: integer
    additionalProperties: false
securityDefinitions:
  mwoUserPool:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: cognito_user_pools
    x-amazon-apigateway-authorizer:
      type: cognito_user_pools
      providerARNs: [
        "arn:aws:cognito-idp:eu-central-1:874845083551:userpool/eu-central-1_1dEhQvStV"
      ]